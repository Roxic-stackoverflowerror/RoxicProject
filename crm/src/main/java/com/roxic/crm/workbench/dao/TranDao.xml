<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.roxic.crm.workbench.dao.TranDao">

    <update id="update">
      update tbl_tran set
            owner=#{owner},
            money=#{money},
            name=#{name},
            expectedDate=#{expectedDate},
            customerId=#{customerId},
            stage=#{stage},
            type=#{type},
            source=#{source},
            activityId=#{activityId},
            contactsId=#{contactsId},
            editBy=#{editBy},
            editTime=#{editTime},
            description=#{description},
            contactSummary=#{contactSummary},
            nextContactTime=#{nextContactTime}

           where id=#{id}
   </update>

    <select id="getTranById" resultType="Tran">
        select
           t.id,
           u.name as owner,
           t.money,
           t.name,
           t.expectedDate,
           cus.name as customerId,
           t.stage,
           t.type,
           t.source,
           a.name as activityId,
           con.fullname as contactsId,
           t.createBy,
           t.createTime,
           t.editBy,
           t.editTime,
           t.description,
           t.contactSummary,
           t.nextContactTime,
           a.id as a,
           con.id as b,
           cus.id as c,
           u.id as d
        from tbl_tran t
        join tbl_user u on u.id=t.owner
        left join tbl_customer cus on cus.id=t.customerId
        left join tbl_contacts con on con.id=t.contactsId
        left join tbl_activity a on a.id=t.activityId
        where t.id=#{id}

    </select>

    <delete id="delete">
        delete from tbl_tran where id in

        <foreach collection="array" item="id" open="(" close=")" separator=",">

            #{id}

        </foreach>
    </delete>

    <delete id="remove">
        delete from tbl_tran where id=#{tranId}
    </delete>

    <select id="getTranListByCuid" resultType="Tran">
        select * from tbl_tran where customerId=#{id}

    </select>

    <select id="getTranListByConid" resultType="Tran">
        select * from tbl_tran where contactsId=#{id}

    </select>

    <select id="getCharts" resultType="Map">
      select
      count(*) as value,stage as name
      from tbl_tran
      group by stage
    </select>
    <select id="getTotal" resultType="Integer">
        select count(id) from tbl_tran;
    </select>

    <update id="changeStage">
        update tbl_tran set stage=#{stage},editBy=#{editBy},editTime=#{editTime} where id=#{id}
    </update>
    <select id="detail" resultType="Tran">
        select

        tran.id,
        user.name as owner,
        tran.money,
        tran.name,
        tran.expectedDate,
        cus.name as customerId,
        tran.stage,
        tran.type,
        tran.source,
        act.name as activityId,
        con.fullname as contactsId,
        tran.createBy,
        tran.createTime,
        tran.editBy,
        tran.editTime,
        tran.description,
        tran.contactSummary,
        tran.nextContactTime


        from tbl_tran tran
        join tbl_user user
        on tran.owner=user.id
        join tbl_customer cus
        on tran.customerId=cus.id
        left join tbl_activity act
        on tran.activityId=act.id
        left join tbl_contacts con
        on tran.contactsId=con.id

        where tran.id=#{id}
    </select>

    <insert id="save">

        insert into tbl_tran(

            id,
            owner,
            money,
            name,
            expectedDate,
            customerId,
            stage,
            type,
            source,
            activityId,
            contactsId,
            createBy,
            createTime,
            description,
            contactSummary,
            nextContactTime


        )

        values(

            #{id},
            #{owner},
            #{money},
            #{name},
            #{expectedDate},
            #{customerId},
            #{stage},
            #{type},
            #{source},
            #{activityId},
            #{contactsId},
            #{createBy},
            #{createTime},
            #{description},
            #{contactSummary},
            #{nextContactTime}

        )


    </insert>

    <select id="getTranListByCondition" resultType="Tran">
        select

        t.id,
        t.name,
        cust.name customerId,
        t.stage,
        IFNULL(t.type, '未设置') type,
        u.name as owner,
        t.source,
        cont.fullname as contactsId

        from tbl_tran t
        join tbl_user u on t.owner = u.id
        left join tbl_customer cust on t.customerId = cust.id
        left join tbl_contacts cont on t.contactsId = cont.id


        <where>

            <if test="owner != null and owner != ''">

                u.name like '%' #{owner} '%'

            </if>

            <if test="name != null and name != ''">

                and t.name like '%' #{name} '%'

            </if>

            <if test="customer != null and customer != ''">

                and cust.name like '%' #{customer} '%'

            </if>

            <if test="stage != null and stage != ''">

                and t.stage = #{stage}

            </if>

            <if test="type != null and type != ''">

                and t.type like '%' #{type} '%'

            </if>

            <if test="source != null and source != ''">

                and t.source like '%' #{source} '%'

            </if>

            <if test="contacts != null and contacts != ''">

                and cont.fullname = #{contacts}

            </if>

        </where>

        order by t.createTime desc

        limit #{skipCount},#{pageSize}
    </select>

    <select id="getTotalByCondition" resultType="Integer">
        select count(t.id)

        from tbl_tran t
        join tbl_user u on t.owner = u.id
        join tbl_customer cust on t.customerId = cust.id
        left join tbl_contacts cont on t.contactsId = cont.id


        <where>

            <if test="owner != null and owner != ''">

                u.name like '%' #{owner} '%'

            </if>

            <if test="name != null and name != ''">

                and t.name like '%' #{name} '%'

            </if>

            <if test="customer != null and customer != ''">

                and cust.name like '%' #{customer} '%'

            </if>

            <if test="stage != null and stage != ''">

                and t.stage = #{stage}

            </if>

            <if test="type != null and type != ''">

                and t.type like '%' #{type} '%'

            </if>

            <if test="source != null and source != ''">

                and t.source like '%' #{source} '%'

            </if>

            <if test="contacts != null and contacts != ''">

                and cont.fullname = #{contacts}

            </if>

        </where>

    </select>
</mapper>

































